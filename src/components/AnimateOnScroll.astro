---
const { animation = "fade-up" } = Astro.props;
const { an = "fade" } = Astro.props;
---

<div class="flex animate-on-scroll" data-animation={an}>
    <slot />
</div>

<style>
    .animate-on-scroll {
        opacity: 0;
        transform: translateY(20px);
        transition: all 0.6s ease-out;
    }

    .animate-on-scroll.visible {
        opacity: 1;
        transform: translateY(0);
    }

    /* Variaciones de animaciones */
    .animate-on-scroll[data-animation="fade-left"] {
        transform: translateX(-20px);
    }

    .animate-on-scroll[data-animation="fade-right"] {
        transform: translateX(20px);
    }

    .animate-on-scroll[data-animation="zoom-in"] {
        transform: scale(0.95);
    }
</style>

<script>
    function setupAnimations() {
        const elements = document.querySelectorAll(".animate-on-scroll");

        const observer = new IntersectionObserver(
            (entries) => {
                entries.forEach((entry) => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add("visible");
                    }
                });
            },
            {
                threshold: 0.1,
                rootMargin: "0px 0px -50px 0px",
            },
        );

        elements.forEach((element) => observer.observe(element));
    }

    // Ejecutar cuando el DOM est√© listo
    document.addEventListener("DOMContentLoaded", setupAnimations);
</script>
